# Docker
# Build a Docker image 
# https://docs.microsoft.com/azure/devops/pipelines/languages/docker

trigger:
- master

resources:
- repo: self

variables:
  tag: '$(Build.BuildId)'
  imageName: 'cms'
  accountName: 'doggo-272605'

stages:
- stage: Build
  displayName: Build image
  jobs:  
  - job: Build
    displayName: Build
    pool:
      vmImage: 'ubuntu-latest'
    steps:
    - task: Docker@2
      displayName: Login to Docker Hub
      inputs:
        command: login
        containerRegistry: '$(accountName)-gcr'
    - task: Docker@2
      displayName: Build an image
      inputs:
        command: buildAndPush
        dockerfile: '$(Build.SourcesDirectory)/Dockerfile'
        repository: '$(accountName)/$(imageName)'
        tags: |
          $(tag)

- stage: Deploy
  displayName: Deploy to Production
  variables:
    environment: production
  jobs:  
  - job: Production
    displayName: 'Deploy - Production'
    pool:
      vmImage: 'ubuntu-latest'
    steps:
    - task: TerraformTaskV1@0
      displayName: Init
      inputs:
        command: init
        backendGCPBucketName: '$(accountName)-$(imageName)-terraform-state'
        backendServiceGCP: '$(accountName)'
        provider: gcp
        workingDirectory: '$(System.DefaultWorkingDirectory)/cicd'
        backendGCPPrefix: 'terraform/state'
    - task: TerraformTaskV1@0
      displayName: Plan
      inputs:
        provider: gcp
        command: plan
        workingDirectory: '$(System.DefaultWorkingDirectory)/cicd'
        environmentServiceNameGCP: '$(accountName)'
        commandOptions: '-var-file=./$(environment).tfvars -var "project_id=$(accountName)" -var "build_number=$(tag)" -var "database_connection_string=$(databaseConnectionString)" -var "gmaps_api_key=$(gmaps_api_key)"'
    - task: TerraformTaskV1@0
      displayName: 'Validate & Apply'
      inputs:
        provider: gcp
        command: apply
        workingDirectory: '$(System.DefaultWorkingDirectory)/cicd'
        environmentServiceNameGCP: '$(accountName)'
        commandOptions: '-auto-approve  -var-file=./$(environment).tfvars -var "project_id=$(accountName)" -var "build_number=$(tag)" -var "database_connection_string=$(databaseConnectionString)" -var "gmaps_api_key=$(gmaps_api_key)"'